/* --------------- Vars -------------------- */

$size-root: 16px;

/* --------------- Maps -------------------- */

$colors: (
"color1": #FFFFFF,
"color2": #3C747BAB,
"color3": #448892,
"color4": #55A738,
"color5": #eff3f4
);

$sizes:(
    "xxxs": $size-root * 0.5,
    "xxs": $size-root * 0.625,
    "xs": $size-root * 0.75,
    "s": $size-root * 0.875,
    "m": $size-root * 1,
    "l": $size-root * 1.5,
    "xl": $size-root * 2,
    "xxl": $size-root * 2.5,
    "xxxl": $size-root * 3,
    "xxxxl": $size-root * 3.5,
    "xxxxxl": $size-root * 4,
    "xxxxxxl": $size-root * 4.5

);

$sizes-mq:(
    "xxs": 320px,
    "xs": 375px,
    "s": 425px,
    "m": 768px,
    "l": 1024px,
    "xl": 1440px,
);

$direction:(top,bottom,left,right,block,inline);

/* --------------- Call Maps -------------------- */

/* Colors */
/* Clave - Valor */
@each $name, $code in $colors{
    .#{$name}{
        color: $code;
    }
    .bg-#{$name}{
        background-color: $code;
    }
}
/* Sizes */
@each $name, $code in $sizes{
    .p-#{$name}{
        padding: $code;
    }
    .br-#{$name}{
        border-radius: $code;
    }
    .fs-#{$name}{
        font-size: $code;
    }
}

/* --------------- Mixins -------------------- */

/* Color */

@mixin color($colorName){
    @if map-has-key($colors, $colorName){
        color: map-get($colors, $colorName);
    }@else {
        @warn "color no encontrado";
    }
}

/* Background color */

@mixin bgColor($colorName){
    @if map-has-key($colors, $colorName){
        background-color: map-get($colors, $colorName);
    }@else {
        @warn "color no encontrado";
    }
}

/* Margin */

@mixin margin($size, $direction) {
    $value: map-get($sizes, $size);

    

    @if $direction == top {
        margin-top: $value;
    } @else if $direction == bottom {
        margin-bottom: $value;
    } @else if $direction == left {
        margin-left: $value;
    } @else if $direction == right {
        margin-right: $value;
    } @else if $direction == block {
        margin-block: $value;
    } @else if $direction == inline {
        margin-inline: $value;
    } @else if $direction == " " {
        margin: $value;
    } @else {
        @warn "Direcci칩n no v치lida: #{$direction}. Usar top, bottom, left, right, block o inline.";
    }
}

/* Padding */

@mixin padding($size, $direction) {
    $value: map-get($sizes, $size);

    @if $direction == top {
        padding-top: $value;
    } @else if $direction == bottom {
        padding-bottom: $value;
    } @else if $direction == left {
        padding-left: $value;
    } @else if $direction == right {
        padding-right: $value;
    } @else if $direction == block {
        padding-block: $value;
    } @else if $direction == inline {
        padding-inline: $value;
    } @else if $direction == " " {
        padding: $value; 
    } @else {
        @warn "Direcci칩n no v치lida: #{$direction}. Usar top, bottom, left o right.";
    }
}

/* Font Size */

@mixin fs($size) {
    $value: map-get($sizes, $size);
    font-size: $value;
}

/* --------------- Media Querys -------------------- */



/* --------------- Styles Page -------------------- */

/* --------------- Coponents -------------------- */

@mixin component1($background, $width, $padding, $gap, $borderRadius, $boxShadow){
    background-color: $background;
    width: $width;
    padding: $padding;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: $gap;
    border-radius: $borderRadius;
    box-shadow: $boxShadow;
}

body,
html{
    @include fs("m");
    @include bgColor(color5);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 100vh;
}

.container{
    @include component1(map-get($colors, color1), 400px, map-get($sizes, m), map-get($sizes, xs), map-get($sizes, m), 0 0 10px rgba(0, 0, 0, 0.1));

    header{
        display: flex;
        
        .profile{
            width: 150px;

            img{
                position: relative;
                width: 100%;
                aspect-ratio: 1/1;
                object-fit: cover;
                border-radius: 16px;
                margin-top: -50%;
                border: 6px solid white;
            }
        }
    }

    .about{
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 4px;
        
        h3{
            text-align: center;
        }
    }

    .social-links{
        display: flex;
        gap: 16px;
        @include padding("m", "bottom");
        a{
            text-decoration: none;
            @include padding("xxxs"," ");
            background-color: #fafafa;
            display: flex;
            width: 48px;
            height: 48px;
            align-items: center;
            justify-content: center;
            border: 1px solid #eee;
            color: #616161;
            border-radius: 8px;
            transition: all 0.3s ease;

            font-size: 20px;
            font-weight: 500;
            transition: all 0.3s ease;

            &:hover{
                border: 1px solid #7e577e;
            }

            &:hover > * {
                color: #7e577e;
            }
        }
    }

    .tabs-container{
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;

        .tabs{
            list-style: none;
            display: flex;
            justify-content: space-around;
            gap: 16px;
            @include padding("m", "bottom");

            li{
                @include padding("xxxs"," ");
                background-color: #fafafa;
                border-radius: 8px;
                cursor: pointer;

                &:hover{
                    border: 1px solid #7e577e;
                }
    
                &:hover > * {
                    color: #7e577e;
                }
            }
        }
    }

    .tab-content{
        display: none;
    }

    .tab-active{
        display: block;
    }
}


